name: Deploy SAM Application

on:
  push:
    branches: [ main, dev ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aws-sam-cli
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set environment variables based on branch
      run: |
        if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
          echo "STACK_NAME=api-server-prod" >> $GITHUB_ENV
          echo "STAGE_NAME=prod" >> $GITHUB_ENV
          echo "Deploying to PRODUCTION stage"
        elif [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
          echo "STACK_NAME=api-server-dev" >> $GITHUB_ENV
          echo "STAGE_NAME=dev" >> $GITHUB_ENV
          echo "Deploying to DEVELOPMENT stage"
        fi

    - name: Build SAM application
      run: sam build

    - name: Deploy SAM application
      run: |
        sam deploy \
          --stack-name ${{ env.STACK_NAME }} \
          --s3-bucket ${{ secrets.S3_BUCKET }} \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
          --parameter-overrides Stage=${{ env.STAGE_NAME }}
