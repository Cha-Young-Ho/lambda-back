AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Blog Management System - Lambda Functions with Alias
Parameters:
  Stage:
    Type: String
    Default: dev
    Description: The deployment stage (dev, prod)
    AllowedValues:
    - dev
    - prod
Globals:
  Function:
    Runtime: python3.11
    Tags:
      Environment:
        Ref: Stage
    Environment:
      Variables:
        STAGE:
          Ref: Stage
    AutoPublishAlias:
      Ref: Stage
    DeploymentPreference:
      Type: AllAtOnce
Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      EndpointConfiguration:
        Type: REGIONAL
      OpenApiVersion: '2.0'
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Tags:
        Environment:
          Ref: Stage
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogAuth
      Handler: app.lambda_handler
      CodeUri: AuthFunction
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:blog/${Stage}/config-*
      Events:
        LoginApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/login
            Method: POST
        AuthOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/login
            Method: OPTIONS
    Metadata:
      SamResourceId: AuthFunction
  BoardFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogBoard
      Handler: app.lambda_handler
      CodeUri: BoardFunction
      Environment:
        Variables:
          TABLE_NAME:
            Fn::Sub: blog-table-${Stage}
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:blog/${Stage}/config-*
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/blog-table-${Stage}
      Events:
        ListBoardApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board
            Method: GET
        GetBoardApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/{boardId}
            Method: GET
        CreateBoardApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board
            Method: POST
        UpdateBoardApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/{boardId}
            Method: PUT
        DeleteBoardApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/{boardId}
            Method: DELETE
        UploadImageApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/upload
            Method: POST
        BoardOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board
            Method: OPTIONS
        BoardItemOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/{boardId}
            Method: OPTIONS
        UploadOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /board/upload
            Method: OPTIONS
    Metadata:
      SamResourceId: BoardFunction
Outputs:
  AuthFunction:
    Description: Auth Lambda Function ARN
    Value:
      Fn::GetAtt:
      - AuthFunction
      - Arn
  AuthFunctionAlias:
    Description: Auth Lambda Function Alias ARN
    Value:
      Ref: AuthFunction.Alias
  BoardFunction:
    Description: Board Lambda Function ARN
    Value:
      Fn::GetAtt:
      - BoardFunction
      - Arn
  BoardFunctionAlias:
    Description: Board Lambda Function Alias ARN
    Value:
      Ref: BoardFunction.Alias
  ApiGatewayId:
    Description: API Gateway ID
    Value:
      Ref: ApiGateway
    Export:
      Name: BlogApiGatewayId
  ApiGatewayURL:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/
    Export:
      Name:
        Fn::Sub: BlogApiEndpoint-${Stage}
  AuthApiEndpoint:
    Description: Auth API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/login
  BoardApiEndpoint:
    Description: Board API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/board
