AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Blog Management System - Lambda Functions with Alias
Parameters:
  Version:
    Type: String
    Default: 1.0.0
    Description: The version number for this deployment
Globals:
  Function:
    Runtime: python3.11
    Tags:
      Version:
        Ref: Version
    Environment:
      Variables:
        VERSION:
          Ref: Version
Resources:
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: blog-common-layer
      Description: Common utilities for blog Lambda functions
      ContentUri: ../../layers/common-layer
      CompatibleRuntimes:
      - python3.11
      RetentionPolicy: Retain
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration:
        Type: REGIONAL
      OpenApiVersion: '2.0'
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogAuth
      Handler: app.lambda_handler
      CodeUri: AuthFunction
      Timeout: 30
      MemorySize: 256
      Layers:
      - Ref: CommonLayer
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:blog/config-*
      Events:
        LoginApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/login
            Method: POST
        AuthOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/login
            Method: OPTIONS
        ValidateTokenApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/validate
            Method: POST
        ValidateTokenOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/validate
            Method: OPTIONS
    Metadata:
      SamResourceId: AuthFunction
  NewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogNews
      Handler: app.lambda_handler
      CodeUri: NewsFunction
      Timeout: 30
      MemorySize: 256
      Layers:
      - Ref: CommonLayer
      Environment:
        Variables:
          TABLE_NAME: blog-table
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:blog/config-*
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/blog-table
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          - s3:GeneratePresignedUrl
          Resource:
            Fn::Sub: arn:aws:s3:::your-bucket-name/*
      Events:
        ListNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news
            Method: GET
        RecentNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/recent
            Method: GET
        GetNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/{newsId}
            Method: GET
        CreateNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news
            Method: POST
        NewsUploadUrlApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/upload-url
            Method: POST
        UpdateNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/{newsId}
            Method: PUT
        DeleteNewsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/{newsId}
            Method: DELETE
        NewsOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news
            Method: OPTIONS
        NewsUploadUrlOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/upload-url
            Method: OPTIONS
        NewsItemOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /news/{newsId}
            Method: OPTIONS
    Metadata:
      SamResourceId: NewsFunction
  GalleryFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogGallery
      Handler: app.lambda_handler
      CodeUri: GalleryFunction
      Timeout: 30
      MemorySize: 256
      Layers:
      - Ref: CommonLayer
      Environment:
        Variables:
          TABLE_NAME: blog-table
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:blog/config-*
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/blog-table
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          - s3:GeneratePresignedUrl
          Resource:
            Fn::Sub: arn:aws:s3:::your-bucket-name/*
      Events:
        ListGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery
            Method: GET
        RecentGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/recent
            Method: GET
        GetGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/{galleryId}
            Method: GET
        CreateGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery
            Method: POST
        GalleryUploadUrlApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/upload-url
            Method: POST
        UpdateGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/{galleryId}
            Method: PUT
        DeleteGalleryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/{galleryId}
            Method: DELETE
        GalleryOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery
            Method: OPTIONS
        GalleryUploadUrlOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/upload-url
            Method: OPTIONS
        GalleryItemOptionsApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /gallery/{galleryId}
            Method: OPTIONS
    Metadata:
      SamResourceId: GalleryFunction
Outputs:
  AuthFunctionName:
    Description: Auth Lambda Function Name
    Value:
      Ref: AuthFunction
  BoardFunctionName:
    Description: Board Lambda Function Name
    Value:
      Ref: BoardFunction
  NewsFunctionName:
    Description: News Lambda Function Name
    Value:
      Ref: NewsFunction
  GalleryFunctionName:
    Description: Gallery Lambda Function Name
    Value:
      Ref: GalleryFunction
  ApiGatewayId:
    Description: API Gateway ID
    Value:
      Ref: ApiGateway
  ApiGatewayURL:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  AuthApiEndpoint:
    Description: Auth API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/login
  BoardApiEndpoint:
    Description: Board API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/board
  NewsApiEndpoint:
    Description: News API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/news
  GalleryApiEndpoint:
    Description: Gallery API endpoint
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/gallery
